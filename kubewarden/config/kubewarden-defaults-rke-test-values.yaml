# This file was autogenerated.

# Common settings across multiple charts. These settings will be used
# by more than one chart and they ideally need to match during the
# installation of the charts consuming this values.
common:
  cattle:
    systemDefaultRegistry:
  policyServer:
    default:
      name: default
      enabled: true
# -- Additional labels to add to all resources
additionalLabels: {}
# app: kubewarden-defaults

# -- Additional annotations to add to all resources
additionalAnnotations: {}
# owner: IT-group1

# Policy Server settings
policyServer:
  replicaCount: 1
  image:
    # The registry is defined in the common.cattle.systemDefaultRegistry value
    repository: "ghcr.io/kubewarden/policy-server"
    tag: "v1.5.1"
  serviceAccountName: policy-server
  # verificationConfig: your_configmap
  # Configmap containing a Sigstore verification configuration under a key
  # named `verification-config`. Must be on the same ns as the PolicyServer.
  permissions:
    # All permissions are cluster-wide. Even namespaced resources are
    # granted access in all namespaces at this time.
    - apiGroup: ""
      resources:
        - namespaces
        - services
    - apiGroup: "networking.k8s.io"
      resources:
        - ingresses
  telemetry:
    enabled: true
  env:
    - name: KUBEWARDEN_LOG_LEVEL
      value: info
  annotations: {}
  # imagePullSecret stores the secret name used to pull images from repositories.
  # The secret should be in the same namespace of the Policy Server
  #
  # Example of usage:
  # imagePullSecret: "mysecret"
  imagePullSecret: "registry01"
  # insecureSources stores a list of allowed insecure registries.
  #
  # Example of usage:
  insecureSources:
    - "registry01.suse"
    - "registry01.suse:5000"
    - "susemanager.suse"

  # sourceAuthorities is a list of the URIs and their PEM encoded certificates
  # used to authenticate them
  #
  # Example of usage:
  # sourceAuthorities:
  #   - uri: "uri1"
  #     certs:
  #       - "cert1"
  #       - "cert2"
  #   - uri: "uri2"
  #     certs:
  #       - "cert3"
  #   - uri: "uri3"
  #     certs:
  #       - "cert4"
  sourceAuthorities:
crdVersion: "policies.kubewarden.io/v1"
recommendedPolicies:
  enabled: true
  skipNamespaces:
    - calico-system
    - cattle-alerting
    - cattle-fleet-local-system
    - cattle-fleet-system
    - cattle-global-data
    - cattle-global-nt
    - cattle-impersonation-system
    - cattle-istio
    - cattle-logging
    - cattle-pipeline
    - cattle-prometheus
    - cattle-system
    - cattle-neuvector-system
    - cert-manager
    - ingress-nginx
    - kube-node-lease
    - kube-public
    - kube-system
    - longhorn-system
    - rancher-operator-system
    - security-scan
    - tigera-operator
  skipAdditionalNamespaces: []
  defaultPolicyMode: "monitor"
  allowPrivilegeEscalationPolicy:
    module: "https://susemanager.suse/pub/kubewarden/ghcr.io/kubewarden/policies/allow-privilege-escalation-psp:v0.1.11"
    name: "no-privilege-escalation"
  hostNamespacePolicy:
    module: "https://susemanager.suse/pub/kubewarden/ghcr.io/kubewarden/policies/host-namespaces-psp:v0.1.2"
    name: "no-host-namespace-sharing"
  podPrivilegedPolicy:
    module: "https://susemanager.suse/pub/kubewarden/ghcr.io/kubewarden/policies/pod-privileged:v0.2.2"
    name: "no-privileged-pod"
  userGroupPolicy:
    module: "https://susemanager.suse/pub/kubewarden/ghcr.io/kubewarden/policies/user-group-psp:v0.4.0"
    name: "do-not-run-as-root"
  hostPathsPolicy:
    module: "https://susemanager.suse/pub/kubewarden/ghcr.io/kubewarden/policies/hostpaths-psp:v0.1.5"
    name: "do-not-share-host-paths"
    paths:
      - pathPrefix: "/tmp"
        readOnly: true
  capabilitiesPolicy:
    module: "https://susemanager.suse/pub/kubewarden/ghcr.io/kubewarden/policies/capabilities-psp:v0.1.9"
    name: "drop-capabilities"
    allowed_capabilities:
    required_drop_capabilities:
      - ALL
    default_add_capabilities:

